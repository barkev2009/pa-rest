{
  "openapi": "3.0.3",
  "info": {
    "title": "Personal Profile REST API (в стадии проработки)",
    "version": "0.0.0"
  },
  "tags": [
    {
      "name": "auth",
      "description": "User authorization"
    },
    {
      "name": "tasks",
      "description": "Task operations"
    },
    {
      "name": "pledges",
      "description": "Getting pledge data"
    },
    {
      "name": "users",
      "description": "Operations with users"
    }
  ],
  "servers": [
    {
      "url": "http://fpc-uzpsb.fisgroup.ru:8080/platform/rs2/rest/endpoint",
      "description": "Сервер проекта УзПСБ"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Get authorization token",
        "description": "Get JWT-token (access and refresh)",
        "operationId": "auth",
        "requestBody": {
          "$ref": "#/components/requestBodies/Auth"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Auth"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Get all tasks",
        "description": "Get all tasks by user (with limit, offset and sorting/filter data)",
        "operationId": "tasks",
        "requestBody": {
          "$ref": "#/components/requestBodies/Tasks"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetTasks"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "description": "Get all users for filtering tasks",
        "operationId": "users",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetUsers"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/task/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get task by ID",
        "description": "Get task details by task ID",
        "operationId": "task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "string",
              "default": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetTask"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/pledge/{id}": {
      "get": {
        "tags": [
          "pledges"
        ],
        "summary": "Get pledge by ID",
        "description": "Get pledge details by its ID",
        "operationId": "pledge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "pledge ID",
            "required": true,
            "schema": {
              "type": "string",
              "default": "123"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetPledge"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    },
    "/set_task": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Set task data",
        "description": "Set task status and executor",
        "operationId": "setTask",
        "requestBody": {
          "$ref": "#/components/requestBodies/SetTask"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SetTask"
          },
          "500": {
            "$ref": "#/components/responses/Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "oid": {
            "type": "string",
            "description": "user ID",
            "example": "100"
          },
          "firstName": {
            "type": "string",
            "description": "first name",
            "example": "Ivan"
          },
          "lastName": {
            "type": "string",
            "description": "last name",
            "example": "Ivanov"
          },
          "middleName": {
            "type": "string",
            "description": "middle name",
            "example": "Ivanovich"
          },
          "login": {
            "type": "string",
            "description": "login",
            "example": "ivanov"
          },
          "userPhotoId": {
            "type": "string",
            "description": "user photo id",
            "example": "123"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "TasksItem": {
        "type": "object",
        "properties": {
          "oid": {
            "type": "string",
            "description": "task ID",
            "example": "123"
          },
          "dueDate": {
            "type": "string",
            "description": "due date",
            "example": "2024-01-01T00:00:00"
          },
          "type": {
            "$ref": "#/components/schemas/Locale"
          },
          "owner": {
            "type": "string",
            "description": "pledge owner",
            "example": "Ivanov Ivan Ivanovich"
          },
          "status": {
            "$ref": "#/components/schemas/Locale"
          },
          "executor": {
            "type": "string",
            "description": "task executor",
            "example": "Ivanov Ivan Ivanovich"
          }
        },
        "xml": {
          "name": "tasksItem"
        }
      },
      "TaskItem": {
        "type": "object",
        "properties": {
          "oid": {
            "type": "string",
            "description": "task ID",
            "example": "1234"
          },
          "status": {
            "$ref": "#/components/schemas/Locale"
          },
          "monitoringExecutor": {
            "type": "string",
            "description": "person, responsible for monitoring execution",
            "example": "Ivanov Ivan Ivanovich"
          },
          "createDate": {
            "type": "string",
            "description": "task create date",
            "example": "2024-01-01T00:00:00"
          },
          "dueDate": {
            "type": "string",
            "description": "task due date",
            "example": "2024-01-01T00:00:00"
          },
          "executor": {
            "type": "string",
            "description": "task executor",
            "example": "Ivanov Ivan Ivanovich"
          },
          "pledgeEstimate": {
            "type": "object",
            "description": "pledge estimate",
            "properties": {
              "oid": {
                "type": "string",
                "description": "pledge ID",
                "example": "123"
              },
              "type": {
                "$ref": "#/components/schemas/Locale"
              },
              "prevValue": {
                "type": "number",
                "description": "previous estimate value",
                "example": 75.97
              },
              "prevCreateDate": {
                "type": "string",
                "description": "previous create date",
                "example": "2024-01-01T00:00:00"
              },
              "curValue": {
                "type": "number",
                "description": "current estimate value",
                "example": 175.97
              },
              "curCreateDate": {
                "type": "string",
                "description": "current create date",
                "example": "2024-02-01T00:00:00"
              },
              "commentary": {
                "type": "string",
                "description": "commentary",
                "example": "default comment"
              }
            }
          },
          "pledgerContactData": {
            "type": "object",
            "description": "contact data",
            "properties": {
              "fullName": {
                "type": "string",
                "description": "pledger full name",
                "example": "Ivanov Ivan Ivanovich"
              },
              "phoneNumber": {
                "type": "string",
                "description": "phone number",
                "example": "+7-960-444-44-55"
              },
              "address": {
                "type": "string",
                "description": "pledger address",
                "example": "default address"
              }
            }
          }
        },
        "xml": {
          "name": "taskItem"
        }
      },
      "Pledge": {
        "type": "object",
        "properties": {
          "oid": {
            "type": "string",
            "description": "task ID",
            "example": "1234"
          },
          "general": {
            "type": "object",
            "description": "general data",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/Locale"
              },
              "subType": {
                "$ref": "#/components/schemas/Locale"
              },
              "owner": {
                "type": "string",
                "description": "pledge owner",
                "example": "Ivanov Ivan Ivanovich"
              },
              "tin": {
                "type": "string",
                "description": "pledge owner TIN",
                "example": "2542345233"
              },
              "estimateValue": {
                "type": "number",
                "description": "pledge estimate value",
                "example": 2342.12
              },
              "estimateDate": {
                "type": "string",
                "description": "pledge estimate value",
                "example": "2024-01-01T00:00:00"
              },
              "cadastralValue": {
                "type": "number",
                "description": "pledge cadastral value",
                "example": 2342.12
              },
              "estimatorName": {
                "type": "string",
                "description": "pledge estimator company name",
                "example": "Ivanov Ivan Ivanovich"
              },
              "estimatorTin": {
                "type": "string",
                "description": "pledge estimator TIN",
                "example": "Ivanov Ivan Ivanovich"
              }
            }
          },
          "address": {
            "type": "object",
            "description": "address data",
            "properties": {
              "country": {
                "$ref": "#/components/schemas/Locale"
              },
              "region": {
                "$ref": "#/components/schemas/Locale"
              },
              "district": {
                "$ref": "#/components/schemas/Locale"
              }
            }
          },
          "asoki": {
            "type": "object",
            "description": "asoki data",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/Locale"
              },
              "propertyRightsDescription": {
                "type": "string",
                "description": "description of property rights",
                "example": "some text here"
              },
              "car": {
                "$ref": "#/components/schemas/AsokiCar"
              },
              "equipment": {
                "$ref": "#/components/schemas/AsokiEquipment"
              },
              "immovable": {
                "$ref": "#/components/schemas/AsokiImmovable"
              }
            }
          }
        },
        "xml": {
          "name": "pledge"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "error message payload",
            "example": "default error message"
          },
          "errorDate": {
            "type": "string",
            "description": "error create date",
            "example": "2024-01-01T00:00:00"
          }
        },
        "xml": {
          "name": "error"
        }
      },
      "SortItem": {
        "type": "object",
        "properties": {
          "columnName": {
            "type": "string",
            "description": "sort column name",
            "example": "status"
          },
          "asc": {
            "type": "boolean",
            "description": "ascending order",
            "example": true
          }
        },
        "xml": {
          "name": "sortItem"
        }
      },
      "Locale": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "locale code",
            "example": "localeCode"
          },
          "value": {
            "type": "string",
            "description": "localized value",
            "example": "localeValue"
          }
        },
        "xml": {
          "name": "locale"
        }
      },
      "AsokiCar": {
        "type": "object",
        "properties": {
          "carType": {
            "type": "string",
            "description": "car type",
            "example": "car type"
          },
          "productionYear": {
            "type": "string",
            "description": "production year",
            "example": "2024"
          },
          "carPower": {
            "type": "string",
            "description": "car power",
            "example": "3523"
          },
          "engineNumber": {
            "type": "string",
            "description": "engine number",
            "example": "kuyvfur"
          },
          "shassisNumber": {
            "type": "string",
            "description": "shassis number",
            "example": "o87tviur"
          },
          "bodyNumber": {
            "type": "string",
            "description": "body number",
            "example": "iybfc6ei7v"
          },
          "plateNumber": {
            "type": "string",
            "description": "plate number",
            "example": "3КВУ34"
          },
          "country": {
            "$ref": "#/components/schemas/Locale"
          },
          "brandString": {
            "type": "string",
            "description": "brand string",
            "example": "Toyota"
          },
          "color": {
            "type": "string",
            "description": "car color",
            "example": "red"
          }
        },
        "xml": {
          "name": "asokiCar"
        }
      },
      "AsokiEquipment": {
        "type": "object",
        "properties": {
          "factoryNumber": {
            "type": "string",
            "description": "factory number",
            "example": "J8fsee6G"
          },
          "registrationNumber": {
            "type": "string",
            "description": "registration number",
            "example": "12313321"
          },
          "commissioningDate": {
            "type": "string",
            "description": "commissioning date",
            "example": "2024-01-01T00:00:00"
          },
          "inventoryNumber": {
            "type": "string",
            "description": "inventoryNumber",
            "example": "iu6bR^RHB"
          },
          "productionDate": {
            "type": "string",
            "description": "production date",
            "example": "2024-01-01T00:00:00"
          },
          "equipmentProducer": {
            "type": "string",
            "description": "equipment producer",
            "example": "companyName"
          }
        },
        "xml": {
          "name": "asokiEquipment"
        }
      },
      "AsokiImmovable": {
        "type": "object",
        "properties": {
          "cadastralNumber": {
            "type": "string",
            "description": "cadastral number",
            "example": "vdjkwbhvs"
          },
          "commissioningDate": {
            "type": "string",
            "description": "commissioning date",
            "example": "2024-01-01T00:00:00"
          },
          "region": {
            "$ref": "#/components/schemas/Locale"
          },
          "district": {
            "$ref": "#/components/schemas/Locale"
          },
          "area": {
            "type": "number",
            "description": "total immovable area",
            "example": 23412.12
          },
          "constructionArea": {
            "type": "number",
            "description": "area used for construction",
            "example": 3412.12
          },
          "usedArea": {
            "type": "number",
            "description": "used area",
            "example": 20000
          },
          "addressString": {
            "type": "string",
            "description": "address string",
            "example": "address string"
          },
          "immovableCondition": {
            "type": "string",
            "description": "immovable condition",
            "example": "condition"
          },
          "immovableType": {
            "$ref": "#/components/schemas/Locale"
          }
        },
        "xml": {
          "name": "asokiImmovable"
        }
      }
    },
    "requestBodies": {
      "Auth": {
        "description": "User login and password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "type": "string",
                  "description": "user login",
                  "example": "login"
                },
                "password": {
                  "type": "string",
                  "description": "user password",
                  "example": "password"
                }
              },
              "required": [
                "login",
                "password"
              ],
              "xml": {
                "name": "authRequest"
              }
            }
          }
        },
        "required": true
      },
      "SetTask": {
        "description": "Task data to set",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "taskId": {
                  "type": "string",
                  "description": "task ID",
                  "example": "123"
                },
                "statusCode": {
                  "type": "string",
                  "description": "code of the status needed",
                  "example": "new"
                },
                "executorId": {
                  "type": "string",
                  "description": "executor (user) ID",
                  "example": "123"
                }
              },
              "required": [
                "taskId",
                "statusCode",
                "executorId"
              ],
              "xml": {
                "name": "setTaskRequest"
              }
            }
          }
        },
        "required": true
      },
      "Tasks": {
        "description": "Request for getting tasks data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "offset": {
                  "type": "integer",
                  "description": "offset value",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "description": "limit value",
                  "example": 10
                },
                "filterData": {
                  "type": "object",
                  "properties": {
                    "executors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "executor ID",
                        "example": "3121"
                      }
                    },
                    "startDate": {
                      "type": "string",
                      "description": "filter start date",
                      "example": "2024-01-01"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "filter end date",
                      "example": "2024-01-11"
                    }
                  }
                },
                "sortData": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SortItem"
                  }
                }
              },
              "required": [
                "userId"
              ],
              "xml": {
                "name": "tasksRequest"
              }
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "Auth": {
        "description": "successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "example": null
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "tokenData": {
                      "type": "object",
                      "description": "payload for token data",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "access JWT-token",
                          "example": "eysometoken"
                        },
                        "refreshToken": {
                          "type": "string",
                          "description": "refresh JWT-token",
                          "example": "eyanothertoken"
                        }
                      }
                    },
                    "userData": {
                      "type": "object",
                      "description": "payload for user data",
                      "properties": {
                        "mustChangePassword": {
                          "type": "boolean",
                          "description": "must change password",
                          "example": false
                        },
                        "passwordExpired": {
                          "type": "boolean",
                          "description": "password expired",
                          "example": true
                        },
                        "userBlocked": {
                          "type": "boolean",
                          "description": "user is blocked",
                          "example": false
                        },
                        "authType": {
                          "type": "string",
                          "description": "auth type",
                          "example": "login"
                        },
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "authResponse"
              }
            }
          }
        }
      },
      "GetTasks": {
        "description": "successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "example": null
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "taskItems": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TasksItem"
                      }
                    },
                    "tableData": {
                      "type": "object",
                      "properties": {
                        "totalRows": {
                          "type": "integer",
                          "description": "total number of table rows",
                          "example": 50
                        },
                        "totalPages": {
                          "type": "integer",
                          "description": "total number of pages",
                          "example": 7
                        },
                        "currentPage": {
                          "type": "integer",
                          "description": "current table page",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "getTasksResponse"
              }
            }
          }
        }
      },
      "GetTask": {
        "description": "successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "example": null
                },
                "payload": {
                  "$ref": "#/components/schemas/TaskItem"
                }
              },
              "xml": {
                "name": "getTaskResponse"
              }
            }
          }
        }
      },
      "GetUsers": {
        "description": "successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "example": null
                },
                "payload": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "xml": {
                "name": "getUsersResponse"
              }
            }
          }
        }
      },
      "GetPledge": {
        "description": "successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "example": null
                },
                "payload": {
                  "$ref": "#/components/schemas/Pledge"
                }
              },
              "xml": {
                "name": "getPledgeResponse"
              }
            },
            "examples": {
              "car": {
                "value": {
                  "error": null,
                  "payload": {
                    "oid": "1234",
                    "general": {
                      "type": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "subType": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "owner": "Ivanov Ivan Ivanovich",
                      "tin": "2542345233",
                      "estimateValue": 2342.12,
                      "estimateDate": "2024-01-01T00:00:00",
                      "cadastralValue": 2342.12,
                      "estimatorName": "Ivanov Ivan Ivanovich",
                      "estimatorTin": "Ivanov Ivan Ivanovich"
                    },
                    "address": {
                      "country": {
                        "code": "some code",
                        "value": "some name"
                      },
                      "region": {
                        "code": "some code",
                        "value": "some name"
                      },
                      "district": {
                        "code": "some code",
                        "value": "some name"
                      }
                    },
                    "asoki": {
                      "status": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "propertyRightsDescription": "some text here",
                      "car": {
                        "type": "car type",
                        "productionYear": "2024",
                        "power": "3523",
                        "engineNumber": "kuyvfur",
                        "shassisNumber": "o87tviur",
                        "bodyNumber": "iybfc6ei7v",
                        "plateNumber": "3КВУ34",
                        "country": {
                          "code": "localeCode",
                          "value": "localeValue"
                        },
                        "brandString": "Toyota",
                        "color": "red"
                      },
                      "equipment": null,
                      "immovable": null
                    }
                  }
                }
              },
              "equipment": {
                "value": {
                  "error": null,
                  "payload": {
                    "oid": "1234",
                    "general": {
                      "type": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "subType": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "pledgeOwner": "Ivanov Ivan Ivanovich",
                      "tin": "2542345233",
                      "estimateValue": 2342.12,
                      "estimateDate": "2024-01-01T00:00:00",
                      "cadastralValue": 2342.12,
                      "estimatorName": "Ivanov Ivan Ivanovich",
                      "estimatorTin": "Ivanov Ivan Ivanovich"
                    },
                    "address": {
                      "country": {
                        "code": "some code",
                        "value": "some name"
                      },
                      "region": {
                        "code": "some code",
                        "value": "some name"
                      },
                      "district": {
                        "code": "some code",
                        "value": "some name"
                      }
                    },
                    "asoki": {
                      "pledgeStatus": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "propertyRightsDescription": "some text here",
                      "car": null,
                      "equipment": {
                        "factoryNumber": "J8fsee6G",
                        "registrationNumber": "12313321",
                        "commissioningDate": "2024-01-01T00:00:00",
                        "inventoryNumber": "iu6bR^RHB",
                        "productionDate": "2024-01-01T00:00:00",
                        "producer": "companyName"
                      },
                      "immovable": null
                    }
                  }
                }
              },
              "immovable": {
                "value": {
                  "error": null,
                  "payload": {
                    "oid": "1234",
                    "general": {
                      "type": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "subType": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "owner": "Ivanov Ivan Ivanovich",
                      "tin": "2542345233",
                      "estimateValue": 2342.12,
                      "estimateDate": "2024-01-01T00:00:00",
                      "cadastralValue": 2342.12,
                      "estimatorName": "Ivanov Ivan Ivanovich",
                      "estimatorTin": "Ivanov Ivan Ivanovich"
                    },
                    "address": {
                      "country": {
                        "code": "some code",
                        "value": "some name"
                      },
                      "region": {
                        "code": "some code",
                        "value": "some name"
                      },
                      "district": {
                        "code": "some code",
                        "value": "some name"
                      }
                    },
                    "asoki": {
                      "status": {
                        "code": "localeCode",
                        "value": "localeValue"
                      },
                      "propertyRightsDescription": "some text here",
                      "car": null,
                      "equipment": null,
                      "immovable": {
                        "cadastralNumber": "vdjkwbhvs",
                        "commissioningDate": "2024-01-01T00:00:00",
                        "region": {
                          "code": "localeCode",
                          "value": "localeValue"
                        },
                        "district": {
                          "code": "localeCode",
                          "value": "localeValue"
                        },
                        "area": 23412.12,
                        "constructionArea": 3412.12,
                        "usedArea": 20000,
                        "addressString": "address string",
                        "condition": "condition",
                        "type": {
                          "code": "localeCode",
                          "value": "localeValue"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SetTask": {
        "description": "set task response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "example": null
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "taskId": {
                      "type": "string",
                      "description": "task ID",
                      "example": "123"
                    },
                    "status": {
                      "$ref": "#/components/schemas/Locale"
                    },
                    "executor": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "setTaskResponse"
              }
            }
          }
        }
      },
      "Error": {
        "description": "internal error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/components/schemas/Error"
                },
                "payload": {
                  "type": "object",
                  "example": null
                }
              },
              "xml": {
                "name": "errorResponse"
              }
            }
          }
        }
      }
    }
  }
}